name: Auto Bump Version and Tag

on:
  push:
    branches:
      - release

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install toml semver toml-cli

    - name: Detect bump type
      id: bump
      run: |
        TITLE=$(git log -1 --pretty=%s)
        echo "PR Title: $TITLE"

        BUMP="patch"
        if [[ "$TITLE" == *"Bump: minor"* ]]; then BUMP="minor"; fi
        if [[ "$TITLE" == *"Bump: major"* ]]; then BUMP="major"; fi
        echo "bump-type=$BUMP" >> $GITHUB_OUTPUT

    - name: Bump version and tag
      id: versioning
      working-directory: ./lgbt
      run: |
        # Установка toml-cli глобально (если нужно)
        python -m pip install --user toml-cli
        export PATH=$PATH:~/.local/bin

        # Читаем текущую версию из pyproject.toml
        CURRENT_VERSION=$(toml get pyproject.toml project.version)
        echo "Current version: $CURRENT_VERSION"

        # Определяем новую версию
        BUMP_TYPE="${{ steps.bump.outputs.bump-type }}"
        NEW_VERSION=$(python -c "
        import semver
        print(semver.bump_$BUMP_TYPE('$CURRENT_VERSION'))
        ")
        echo "New version: $NEW_VERSION"

        # Обновляем pyproject.toml
        toml set --toml-path pyproject.toml project.version $NEW_VERSION

        # Настраиваем Git
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

        # Коммитим и создаём тег
        git add pyproject.toml
        git commit -m "Bump version to $NEW_VERSION"
        git tag "v$NEW_VERSION"

        # Пушим изменения и тег
        git push origin HEAD:release --tags

        # Сохраняем новую версию в outputs
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: v${{ steps.versioning.outputs.new_version }}
        name: Release v${{ steps.versioning.outputs.new_version }}
        body: |
          Автоматический релиз версии v${{ steps.versioning.outputs.new_version }}
          Коммит: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
