name: Auto Bump Version and Tag

on:
  push:
    branches:
      - release

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install toml semver

    - name: Detect bump type
      id: bump
      run: |
        TITLE=$(git log -1 --pretty=%s)
        echo "PR Title: $TITLE"

        BUMP="patch"
        if [[ "$TITLE" == *"Bump: minor"* ]]; then BUMP="minor"; fi
        if [[ "$TITLE" == *"Bump: major"* ]]; then BUMP="major"; fi

        echo "bump-type=$BUMP" >> $GITHUB_OUTPUT

    - name: Bump version
      id: versioning
      working-directory: ./lgbt
      run: |
        cat <<EOF | python3
import toml, semver, os

path = 'pyproject.toml'
pyproject = toml.load(path)
version = pyproject['project']['version']
bump = os.environ['BUMP_TYPE']
new_version = getattr(semver, f'bump_{bump}')(version)
pyproject['project']['version'] = new_version
with open(path, 'w') as f:
    toml.dump(pyproject, f)
print(f'New version: {new_version}')
with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
    print(f'new_version={new_version}', file=fh)
EOF
      env:
        BUMP_TYPE: ${{ steps.bump.outputs.bump-type }}

    - name: Git commit, tag and push
      working-directory: ./lgbt
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

        git add pyproject.toml
        git commit -m "Bump version to ${{ steps.versioning.outputs.new_version }}"
        git tag v${{ steps.versioning.outputs.new_version }}
        git push origin HEAD:release --tags

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.versioning.outputs.new_version }}
        name: Release v${{ steps.versioning.outputs.new_version }}
        body: |
          Автоматический релиз версии v${{ steps.versioning.outputs.new_version }}
          Коммит: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
